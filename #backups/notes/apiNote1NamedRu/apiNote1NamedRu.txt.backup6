// 2021-06-28 12:02:44


-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[IDEA]
- создать стиль написания кода, а так же правила разделяющие написание кодовой базы (api) от кода проекта.
- причём гарантируя отсутствие пересечений между кодовой базой (api), стандартным api, и кодом проекта (в большинстве случаев).

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[GENERAL]

-- ########################################################################################## --
# skip-имя
- имя, которое ни как не используется
[_, _0, _1, _2, _n...]
catch(_)
funct(_0, _1, name) - вызов функции

-- ############################## --
# именна ресурсов
- префиксы, которые зарезервированны под имена ресурсов
[spr, snd, obj, scr, seq, shad, room, ext, path, note, timeline, tileset, font, curve, incl, tag]

- example:
sprRedPlayer
scrWindowAdapt

-- ########################################################################################## --
# именнование локальных переменных (self.публичные) и функций
- style: camelCase
- обязательно с использованием явного self.
- не рекомендуется использовать built-in имена

- example:
self.helloWorld
self.thisName
function helloWorld()
function thisName()

-- ########################################################################################## --
# именнование локальных переменных (self.приватные) и функций
- style: camelCase
- обязательно с использованием явного self.

- example:
self.__helloWorld
self.__thisName
function __helloWorld()
function __thisName()

-- ########################################################################################## --
# именнование глобальных переменных (global.публичные)
- style: camelCase
- не рекомендуется использовать built-in имена
- нельзя использовать именна функций

- example:
global.helloWorld
global.thisName

-- ########################################################################################## --
# именнование глобальных переменных (global.приватные)
- style: camelCase
- нельзя использовать именна функций

- example:
global.__helloWorld
global.__thisName

# использование конструкторов (constructor)
- style: PascalCase

- example:
function Integer() constructor
function Tween() constructor

-- ########################################################################################## --
# именнование глобальных переменных (всегда публичные)
- style: PascalCase
- не рекомендуется использовать (предпочтение PascalCase для констукторов)

- example:
globalvar HelloWorld
globalvar ThisName

-- ########################################################################################## --
# именнование enum (всегда публичные)
- style: MACRO_CASE

- example: 
enum HELLO_WORLD {HELLO, WORLD}
enum THIS_NAME {THIS, NAME}

-- ########################################################################################## --
# именнование макросов (всегда публичные)
- style: MACRO_CASE

- example:
#macro HELLO_WORLD
#macor THIS_NAME

-- ########################################################################################## --
# временные переменные (var)
- style: camelCase
- не рекомендуется использовать built-in имена

- example:
var helloWorld;
var thisName;
var _helloWorld;
var _thisName;
var helloWorld_;
var thisName_;

-- ########################################################################################## --
# выделение сигнатуры функций и конструкторов
- style: camelCase
- имена начинающиеся с _, говорят, о том что аргумент дополнительный (после первого дополнительного аргумента, все остальные так же дополнительные)
- рекомендуется, чтобы публичная сигнатура совпадала с сигнатурой объявление (в этом случаи не требуется дополнительно описывать сигнатуру)

- example:
/// @function name(arg0, _arg1, _arg2, _arg3) // публичная сигнатура
function name(arg0, arg1, _arg2, arg3_)       // сигнатура объявление

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[API]

-- ########################################################################################## --
# все имена api (кодовой базы) следуют выделять префиксом api в соответствующем стиле, за исключением:
1. self.публичные
2. self.приватные
3. var
4. сигнатуры функций

-- ########################################################################################## --
# стиль именнования ресурсов camelCase
# имена ресурсов api, так же выделяются этим префиксом

- example:
- example:
apiObjLoader
apiScrLoader
self.HelloWorld
self.__HelloWorld
global.apiHelloWorld
global.__apiThisName
globalvar ApiHelloWorld
var thisName
enum ApiThisName {Hello, World}

-- ########################################################################################## --
# обязательно соблюдения правил [GENERAL]
# обязательно наличие тестов кода с возможностью его запуска при необходимости

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[PROJECT]

# запрещается использования префикса api в любых именнованиях
# не обязательно соблюдения правил [GENERAL] (это может привести к проблемам)
# обязательно использовать стартер api

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[OTHER]
# Использование snake_case остаётся не зарезервированным
# Использование других префиксов (кроме api) остаётся не зарезервированным
